@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2021 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@page "/"
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Pages.General
@using TcNo_Acc_Switcher_Globals
@inject IJSRuntime _jsRuntime
@{ _appData.SetActiveIJsRuntime(_jsRuntime); }
@inject NavigationManager _navManager
@{ _appData.SetActiveNavMan(_navManager); }
@inject AppData _appData
@inject AppSettings _appSettings

@inject ILanguageContainerService  _locale

@*@if (true)*@
@if (AppSettings.Instance.UpdateAvailable)
{
    <div class="updateBar" @onclick="UpdateNow">
        <span>@_locale["Update"]</span>
    </div>
}

<ContextMenu ContextMenuString=@AppSettings.Instance.PlatformContextMenu />
<div class="platformContainer">
    <div class="platform_list">
        @foreach (var platform in Globals.PlatformList)
        {
            @if (!AppSettings.Instance.DisabledPlatforms.Contains(platform))
            {
                <div class="platform_list_item" id="@("Switcher" + platform)" @onclick="() => Check(platform)">
                    <svg viewBox="0 0 2084 2084" draggable="false" alt="@(platform)" class="@($"ico{platform}BG")">
                        <use href="@($"img/platform/{platform.ToLowerInvariant()}.svg#TEXT")" class="@($"ico{platform}Text")"></use>
                        <use href="@($"img/platform/{platform.ToLowerInvariant()}.svg#FG")" class="@($"ico{platform}FG")"></use>
                        <use href="img/platform/glass.svg#GLASS" class="icoGlass @($"ico{platform}Glass")"></use>
                    </svg>
                </div>
            }
        }
    </div>
</div>

<div class="acc_list_actionbar">
    <div>
        @*<button id="btnTextEditor" onclick="location = 'TextEditor'">
            <svg viewBox="0 0 60 60" draggable="false" alt="Settings" class="footerIcoSettings">
                <use href="img/icons/ico_settings.svg#icoSettings"></use>
            </svg>
        </button>*@
        <button id="btnSettings" onclick="location = 'Settings'">
            <svg viewBox="0 0 60 60" draggable="false" alt="Settings" class="footerIcoSettings">
                <use href="img/icons/ico_settings.svg#icoSettings"></use>
            </svg>
        </button>
        <button id="btnHelp" onclick="showModal('info');">
            <svg viewBox="0 0 60 60" draggable="false" alt="Question" class="footerIcoQuestion">
                <use href="img/icons/ico_question.svg#icoQuestion"></use>
            </svg>
        </button>
    </div>
</div>

@code
{
	// This is run before everything is painted on, so that it can get the correct values for the CSS Block.
	protected override void OnParametersSet()
	{
	}

	protected override void OnAfterRender(bool firstRender)
	{
		AppData.Instance.WindowTitle = "TcNo Account Switcher";
		if (!GeneralFuncs.WindowSettingsValid())
		{
			// Do something here if necessary.
			// For now this is just being used to load settings.
		}
		if (firstRender)
		{
			GeneralFuncs.HandleQueries();
			AppData.InvokeVoidAsync("initContextMenu");
			//await AppData.InvokeVoidAsync("initAccListSortable");
		}
	}
	protected override void OnInitialized()
	{
		_locale.InitLocalizedComponent(this);
	}
}